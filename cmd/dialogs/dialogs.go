/*
 * OTUS Highload Architect
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"os"

	log "github.com/sirupsen/logrus"
	"github.com/xpoh/otus-work-dialogs/internal/clickhouse"
	"github.com/xpoh/otus-work-dialogs/internal/config"
	"github.com/xpoh/otus-work-dialogs/internal/dialogs"
)

func main() {
	cfg := config.New()
	cfg.PrintDebug()

	initLogger(cfg)

	click := clickhouse.New(cfg)
	if err := click.Open(); err != nil {
		log.Panic(err)
	}

	defer click.Close()

	if err := click.Migrate(); err != nil {
		log.Panicf("db.Migrate(...): %v", err)
	}

	server := dialogs.NewServer(cfg, click)

	server.Start()

	log.Printf("Server started")
}

func initLogger(cfg *config.Config) {
	log.SetReportCaller(true)
	log.SetOutput(os.Stdout)

	log.SetLevel(cfg.GetLogLevel())

	log.SetFormatter(
		&log.TextFormatter{
			FullTimestamp: true,
		},
	)
}
